//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: st25sdk_ios/type2/Type2Tag.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComStSt25sdkType2Type2Tag")
#ifdef RESTRICT_ComStSt25sdkType2Type2Tag
#define INCLUDE_ALL_ComStSt25sdkType2Type2Tag 0
#else
#define INCLUDE_ALL_ComStSt25sdkType2Type2Tag 1
#endif
#undef RESTRICT_ComStSt25sdkType2Type2Tag

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComStSt25sdkType2Type2Tag_) && (INCLUDE_ALL_ComStSt25sdkType2Type2Tag || defined(INCLUDE_ComStSt25sdkType2Type2Tag))
#define ComStSt25sdkType2Type2Tag_

#define RESTRICT_ComStSt25sdkNFCTag 1
#define INCLUDE_ComStSt25sdkNFCTag 1
#include "com/st/st25sdk/NFCTag.h"

#define RESTRICT_ComStSt25sdkCCFileInterface 1
#define INCLUDE_ComStSt25sdkCCFileInterface 1
#include "com/st/st25sdk/CCFileInterface.h"

#define RESTRICT_ComStSt25sdkCommandNdefCommandInterface 1
#define INCLUDE_ComStSt25sdkCommandNdefCommandInterface 1
#include "com/st/st25sdk/command/NdefCommandInterface.h"

#define RESTRICT_ComStSt25sdkCommandType2CommandInterface 1
#define INCLUDE_ComStSt25sdkCommandType2CommandInterface 1
#include "com/st/st25sdk/command/Type2CommandInterface.h"

#define RESTRICT_ComStSt25sdkCacheInterface 1
#define INCLUDE_ComStSt25sdkCacheInterface 1
#include "com/st/st25sdk/CacheInterface.h"

@class ComStSt25sdkCommandNdefType2Command;
@class ComStSt25sdkCommandType2Command;
@class ComStSt25sdkControlTlv;
@class ComStSt25sdkNdefNDEFMsg;
@class ComStSt25sdkTagCache;
@class ComStSt25sdkType2CCFileType2;
@class IOSByteArray;
@protocol ComStSt25sdkRFReaderInterface;
@protocol JavaUtilList;

@interface ComStSt25sdkType2Type2Tag : ComStSt25sdkNFCTag < ComStSt25sdkCCFileInterface, ComStSt25sdkCommandNdefCommandInterface, ComStSt25sdkCommandType2CommandInterface, ComStSt25sdkCacheInterface > {
 @public
  ComStSt25sdkCommandType2Command *mType2Cmd_;
  ComStSt25sdkType2CCFileType2 *mCCFile_;
  ComStSt25sdkTagCache *mCache_;
  ComStSt25sdkCommandNdefType2Command *mNdefCmd_;
  id<JavaUtilList> mTlvList_;
}
@property (readonly, class) jbyte T2T_AREA_FIRST_BYTE_ADDRESS NS_SWIFT_NAME(T2T_AREA_FIRST_BYTE_ADDRESS);

+ (jbyte)T2T_AREA_FIRST_BYTE_ADDRESS;

#pragma mark Public

- (instancetype __nonnull)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)readerInterface;

- (instancetype __nonnull)initWithComStSt25sdkRFReaderInterface:(id<ComStSt25sdkRFReaderInterface>)readerInterface
                                                  withByteArray:(IOSByteArray *)uid;

- (void)activateCache;

- (id<JavaUtilList>)computeLockControlAndReservedAreaWithJavaUtilList:(id<JavaUtilList>)listOfTlv;

- (jint)computeTlvSizeWithInt:(jint)byteAddress;

- (void)deactivateCache;

- (ComStSt25sdkControlTlv *)decodeTlvFromTagWithInt:(jint)byteAddress;

- (jint)findNdefMsgStartAddress;

- (jint)findNdefMsgStartAddressWithJavaUtilList:(id<JavaUtilList>)listOfTlv;

- (jint)getBlockSizeInBytes;

- (jint)getCCFileLength;

- (jbyte)getCCMagicNumber;

- (jbyte)getCCMappingVersion;

- (jint)getCCMemorySize;

- (jbyte)getCCReadAccess;

- (jbyte)getCCWriteAccess;

- (jint)getMemSizeInBytes;

- (jint)getReadDataSizeInBytes;

- (jint)getSysFileLength;

- (ComStSt25sdkCommandType2Command *)getType2Command;

- (jint)getWriteDataSizeInBytes;

- (void)initEmptyCCFile OBJC_METHOD_FAMILY_NONE;

- (void)invalidateCache;

- (jboolean)isCacheActivated;

- (jboolean)isCacheValid;

- (id<JavaUtilList>)parseBufferForTlvListWithByteArray:(IOSByteArray *)buffer;

- (id<JavaUtilList>)parseBufferForTlvListWithByteArray:(IOSByteArray *)buffer
                                               withInt:(jint)offsetAddress;

- (id<JavaUtilList>)parseMemoryForTlv;

- (IOSByteArray *)readWithByte:(jbyte)blockNumber;

- (IOSByteArray *)readBlocksWithInt:(jint)firstBlockAddress
                            withInt:(jint)sizeInBlocks;

- (IOSByteArray *)readBytesWithInt:(jint)byteAddress
                           withInt:(jint)sizeInBytes;

- (IOSByteArray *)readCCFile;

- (ComStSt25sdkNdefNDEFMsg *)readNdefMessage;

- (IOSByteArray *)readSysFile;

- (IOSByteArray *)sectorSelectWithByte:(jbyte)sectorNumber;

- (IOSByteArray *)sectorSelectCmdPacket1;

- (IOSByteArray *)sectorSelectCmdPacket2WithByte:(jbyte)sectorNumber;

- (void)updateCache;

- (void)validateCache;

- (IOSByteArray *)writeWithByte:(jbyte)blockNumber
                  withByteArray:(IOSByteArray *)data;

- (void)writeBlocksWithInt:(jint)firstBlockAddress
             withByteArray:(IOSByteArray *)data;

- (void)writeBytesWithInt:(jint)byteAddress
            withByteArray:(IOSByteArray *)data;

- (void)writeCCFile;

- (void)writeCCFileWithByteArray:(IOSByteArray *)buffer;

- (void)writeNdefMessageWithComStSt25sdkNdefNDEFMsg:(ComStSt25sdkNdefNDEFMsg *)msg;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComStSt25sdkType2Type2Tag)

J2OBJC_FIELD_SETTER(ComStSt25sdkType2Type2Tag, mType2Cmd_, ComStSt25sdkCommandType2Command *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType2Type2Tag, mCCFile_, ComStSt25sdkType2CCFileType2 *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType2Type2Tag, mCache_, ComStSt25sdkTagCache *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType2Type2Tag, mNdefCmd_, ComStSt25sdkCommandNdefType2Command *)
J2OBJC_FIELD_SETTER(ComStSt25sdkType2Type2Tag, mTlvList_, id<JavaUtilList>)

inline jbyte ComStSt25sdkType2Type2Tag_get_T2T_AREA_FIRST_BYTE_ADDRESS(void);
#define ComStSt25sdkType2Type2Tag_T2T_AREA_FIRST_BYTE_ADDRESS 16
J2OBJC_STATIC_FIELD_CONSTANT(ComStSt25sdkType2Type2Tag, T2T_AREA_FIRST_BYTE_ADDRESS, jbyte)

FOUNDATION_EXPORT void ComStSt25sdkType2Type2Tag_initWithComStSt25sdkRFReaderInterface_(ComStSt25sdkType2Type2Tag *self, id<ComStSt25sdkRFReaderInterface> readerInterface);

FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag *new_ComStSt25sdkType2Type2Tag_initWithComStSt25sdkRFReaderInterface_(id<ComStSt25sdkRFReaderInterface> readerInterface) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag *create_ComStSt25sdkType2Type2Tag_initWithComStSt25sdkRFReaderInterface_(id<ComStSt25sdkRFReaderInterface> readerInterface);

FOUNDATION_EXPORT void ComStSt25sdkType2Type2Tag_initWithComStSt25sdkRFReaderInterface_withByteArray_(ComStSt25sdkType2Type2Tag *self, id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid);

FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag *new_ComStSt25sdkType2Type2Tag_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag *create_ComStSt25sdkType2Type2Tag_initWithComStSt25sdkRFReaderInterface_withByteArray_(id<ComStSt25sdkRFReaderInterface> readerInterface, IOSByteArray *uid);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkType2Type2Tag)

#endif

#if !defined (ComStSt25sdkType2Type2Tag_Type2FileType_) && (INCLUDE_ALL_ComStSt25sdkType2Type2Tag || defined(INCLUDE_ComStSt25sdkType2Type2Tag_Type2FileType))
#define ComStSt25sdkType2Type2Tag_Type2FileType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComStSt25sdkType2Type2Tag_Type2FileType_Enum) {
  ComStSt25sdkType2Type2Tag_Type2FileType_Enum_NDEF_FILE = 0,
};

@interface ComStSt25sdkType2Type2Tag_Type2FileType : JavaLangEnum

@property (readonly, class, nonnull) ComStSt25sdkType2Type2Tag_Type2FileType *NDEF_FILE NS_SWIFT_NAME(NDEF_FILE);
+ (ComStSt25sdkType2Type2Tag_Type2FileType * __nonnull)NDEF_FILE;

#pragma mark Public

+ (ComStSt25sdkType2Type2Tag_Type2FileType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComStSt25sdkType2Type2Tag_Type2FileType_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ComStSt25sdkType2Type2Tag_Type2FileType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag_Type2FileType *ComStSt25sdkType2Type2Tag_Type2FileType_values_[];

inline ComStSt25sdkType2Type2Tag_Type2FileType *ComStSt25sdkType2Type2Tag_Type2FileType_get_NDEF_FILE(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkType2Type2Tag_Type2FileType, NDEF_FILE)

FOUNDATION_EXPORT IOSObjectArray *ComStSt25sdkType2Type2Tag_Type2FileType_values(void);

FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag_Type2FileType *ComStSt25sdkType2Type2Tag_Type2FileType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag_Type2FileType *ComStSt25sdkType2Type2Tag_Type2FileType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkType2Type2Tag_Type2FileType)

#endif

#if !defined (ComStSt25sdkType2Type2Tag_AccessStatus_) && (INCLUDE_ALL_ComStSt25sdkType2Type2Tag || defined(INCLUDE_ComStSt25sdkType2Type2Tag_AccessStatus))
#define ComStSt25sdkType2Type2Tag_AccessStatus_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComStSt25sdkType2Type2Tag_AccessStatus_Enum) {
  ComStSt25sdkType2Type2Tag_AccessStatus_Enum_NOT_LOCKED = 0,
  ComStSt25sdkType2Type2Tag_AccessStatus_Enum_LOCKED_BY_PASSWORD = 1,
  ComStSt25sdkType2Type2Tag_AccessStatus_Enum_NOT_AUTHORIZED = 2,
  ComStSt25sdkType2Type2Tag_AccessStatus_Enum_STATUS_UNKNOWN = 3,
};

@interface ComStSt25sdkType2Type2Tag_AccessStatus : JavaLangEnum

@property (readonly, class, nonnull) ComStSt25sdkType2Type2Tag_AccessStatus *NOT_LOCKED NS_SWIFT_NAME(NOT_LOCKED);
@property (readonly, class, nonnull) ComStSt25sdkType2Type2Tag_AccessStatus *LOCKED_BY_PASSWORD NS_SWIFT_NAME(LOCKED_BY_PASSWORD);
@property (readonly, class, nonnull) ComStSt25sdkType2Type2Tag_AccessStatus *NOT_AUTHORIZED NS_SWIFT_NAME(NOT_AUTHORIZED);
@property (readonly, class, nonnull) ComStSt25sdkType2Type2Tag_AccessStatus *STATUS_UNKNOWN NS_SWIFT_NAME(STATUS_UNKNOWN);
+ (ComStSt25sdkType2Type2Tag_AccessStatus * __nonnull)NOT_LOCKED;

+ (ComStSt25sdkType2Type2Tag_AccessStatus * __nonnull)LOCKED_BY_PASSWORD;

+ (ComStSt25sdkType2Type2Tag_AccessStatus * __nonnull)NOT_AUTHORIZED;

+ (ComStSt25sdkType2Type2Tag_AccessStatus * __nonnull)STATUS_UNKNOWN;

#pragma mark Public

+ (ComStSt25sdkType2Type2Tag_AccessStatus *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComStSt25sdkType2Type2Tag_AccessStatus_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ComStSt25sdkType2Type2Tag_AccessStatus)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag_AccessStatus *ComStSt25sdkType2Type2Tag_AccessStatus_values_[];

inline ComStSt25sdkType2Type2Tag_AccessStatus *ComStSt25sdkType2Type2Tag_AccessStatus_get_NOT_LOCKED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkType2Type2Tag_AccessStatus, NOT_LOCKED)

inline ComStSt25sdkType2Type2Tag_AccessStatus *ComStSt25sdkType2Type2Tag_AccessStatus_get_LOCKED_BY_PASSWORD(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkType2Type2Tag_AccessStatus, LOCKED_BY_PASSWORD)

inline ComStSt25sdkType2Type2Tag_AccessStatus *ComStSt25sdkType2Type2Tag_AccessStatus_get_NOT_AUTHORIZED(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkType2Type2Tag_AccessStatus, NOT_AUTHORIZED)

inline ComStSt25sdkType2Type2Tag_AccessStatus *ComStSt25sdkType2Type2Tag_AccessStatus_get_STATUS_UNKNOWN(void);
J2OBJC_ENUM_CONSTANT(ComStSt25sdkType2Type2Tag_AccessStatus, STATUS_UNKNOWN)

FOUNDATION_EXPORT IOSObjectArray *ComStSt25sdkType2Type2Tag_AccessStatus_values(void);

FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag_AccessStatus *ComStSt25sdkType2Type2Tag_AccessStatus_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComStSt25sdkType2Type2Tag_AccessStatus *ComStSt25sdkType2Type2Tag_AccessStatus_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComStSt25sdkType2Type2Tag_AccessStatus)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComStSt25sdkType2Type2Tag")
